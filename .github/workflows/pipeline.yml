name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
env:
  STABLE: ""

jobs:
  Build:
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.7
      with:
        versionSpec: '5.x'
    - name: Determine Version
      id:   gitversion
      uses: gittools/actions/gitversion/execute@v0.9.7
      with:
        useConfigFile: true
        
    - name: Set version
      run: $STABLE="${{steps.gitversion.outputs.majorMinorPatch}}"
    
    - name: Pack
      run: dotnet pack 'QueryBuilder/QueryBuilder.csproj' --configuration Release /p:Version=${env:STABLE} --output stable

    - name: Publish Artifacts
      uses: actions/upload-artifact@v2
      with:
        path: '**/bin/**/*.nupkg'
        
#     - name: debug
#       run: |
#         ls
#         ls QueryBuilder/
        
#     - name: Restore dependencies
#       run: dotnet restore
      
#     - name: Build
#       run: dotnet build --no-restore
      
#     - name: Test
#       run: dotnet test --no-build --verbosity normal
        
#     - name: Display GitVersion outputs
#       run: |
#         echo "SemVer: {{ $GITVERSION_SEMVER }}"
#         echo "Major: ${{ steps.gitversion.outputs.major }}"
#         echo "Minor: ${{ steps.gitversion.outputs.minor }}"
#         echo "Patch: ${{ steps.gitversion.outputs.patch }}"
#         echo "PreReleaseTag: ${{ steps.gitversion.outputs.preReleaseTag }}"
#         echo "PreReleaseTagWithDash: ${{ steps.gitversion.outputs.preReleaseTagWithDash }}"
#         echo "PreReleaseLabel: ${{ steps.gitversion.outputs.preReleaseLabel }}"
#         echo "PreReleaseNumber: ${{ steps.gitversion.outputs.preReleaseNumber }}"
#         echo "WeightedPreReleaseNumber: ${{ steps.gitversion.outputs.weightedPreReleaseNumber }}"
#         echo "BuildMetaData: ${{ steps.gitversion.outputs.buildMetaData }}"
#         echo "BuildMetaDataPadded: ${{ steps.gitversion.outputs.buildMetaDataPadded }}"
#         echo "FullBuildMetaData: ${{ steps.gitversion.outputs.fullBuildMetaData }}"
#         echo "MajorMinorPatch: ${{ steps.gitversion.outputs.majorMinorPatch }}"
#         echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"
#         echo "LegacySemVer: ${{ steps.gitversion.outputs.legacySemVer }}"
#         echo "LegacySemVerPadded: ${{ steps.gitversion.outputs.legacySemVerPadded }}"
#         echo "AssemblySemVer: ${{ steps.gitversion.outputs.assemblySemVer }}"
#         echo "AssemblySemFileVer: ${{ steps.gitversion.outputs.assemblySemFileVer }}"
#         echo "FullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}"
#         echo "InformationalVersion: ${{ steps.gitversion.outputs.informationalVersion }}"
#         echo "BranchName: ${{ steps.gitversion.outputs.branchName }}"
#         echo "EscapedBranchName: ${{ steps.gitversion.outputs.escapedBranchName }}"
#         echo "Sha: ${{ steps.gitversion.outputs.sha }}"
#         echo "ShortSha: ${{ steps.gitversion.outputs.shortSha }}"
#         echo "NuGetVersionV2: ${{ steps.gitversion.outputs.nuGetVersionV2 }}"
#         echo "NuGetVersion: ${{ steps.gitversion.outputs.nuGetVersion }}"
#         echo "NuGetPreReleaseTagV2: ${{ steps.gitversion.outputs.nuGetPreReleaseTagV2 }}"
#         echo "NuGetPreReleaseTag: ${{ steps.gitversion.outputs.nuGetPreReleaseTag }}"
#         echo "VersionSourceSha: ${{ steps.gitversion.outputs.versionSourceSha }}"
#         echo "CommitsSinceVersionSource: ${{ steps.gitversion.outputs.commitsSinceVersionSource }}"
#         echo "CommitsSinceVersionSourcePadded: ${{ steps.gitversion.outputs.commitsSinceVersionSourcePadded }}"
#         echo "UncommittedChanges: ${{ steps.gitversion.outputs.uncommittedChanges }}"
#         echo "CommitDate: ${{ steps.gitversion.outputs.commitDate }}"        
